{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA4DeA,MA1Df,SAAmBC,GACf,MAAyBC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAlE,mBAAMC,EAAN,KAAaC,EAAb,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QActB,OACI,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAEVC,EAAS,KAKT,SACKL,EAAME,KACH,qCACH,uBACGoB,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAET,wBAAQQ,UAAU,mBAAlB,uBAII,qCACA,uBACAQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEL,wBAAQQ,UAAU,cAAlB,4B,gBCRDa,MAxCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAC5C,EAAwB9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAM,KAFV,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAG,KACHd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACjB,sBACIrB,UAAWoB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACKiB,EAAKb,MADAa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACIuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEd,cAAC,IAAD,CACIuB,QAAS,kBAAML,EAAQ,CAACf,GAAIiB,EAAKjB,GAAId,MAAM+B,EAAKb,QAChDP,UAAU,mBAZbqB,OC0BEG,MAhDf,WACI,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAoCA,OACI,gCACI,8DACA,cAAC,EAAD,CAAUxB,SArCF,SAAAmB,GAAS,IAAD,EACpB,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,IACT,EAAAC,SAAQC,IAAR,oBAAef,QA8BX,cAAC,EAAD,CAAMA,MAAOA,EAAOC,aAbP,SAAAZ,GACjB,IAAI2B,EAAehB,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASK,IAM2Cd,WAlBrC,SAAAb,GACf,IAAM4B,EAAY,YAAIjB,GAAOkB,QAAO,SAAAZ,GAAI,OAAIA,EAAKjB,KAAOA,KACxDsB,EAASM,IAiBLd,WA5BW,SAACgB,EAAQC,GACpBA,EAAS3B,OAAQ,QAAQmB,KAAKQ,EAAS3B,OAI3CkB,GAAS,SAAAU,GAAI,OAAIA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKjC,KAAO8B,EAASC,EAAWE,eCX5DC,MARf,WACE,OACE,qBAAKrC,UAAU,WAAf,SACI,cAAC,EAAD,OCHRsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8ab08e7.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nfunction TodoForm (props) {\n    const[input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handleChange = e => {\n        setInput(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n        setInput(``);\n    }\n\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n            {props.edit ? (\n                <>\n             <input\n                type=\"text\"\n                placeholder=\"Add a todo\"\n                value={input}\n                name=\"text\"\n                className=\"todo-input\"\n                onChange={handleChange}\n                ref={inputRef}\n            />\n            <button className=\"todo-button edit\">Update</button>\n                </>\n                ) :\n            (\n                <>\n                <input\n                type=\"text\"\n                placeholder=\"Add a todo\"\n                value={input}\n                name=\"text\"\n                className=\"todo-input\"\n                onChange={handleChange}\n                ref={inputRef}\n                />\n                <button className=\"todo-button\">Add todo</button>\n                </>\n            )}\n        </form>\n    );\n}\n\nexport default TodoForm;","import React, {useState, useEffect, useRef} from 'react';\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\nimport TodoForm from \"./TodoForm\";\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ``\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id:null,\n            value: \"\"\n        })\n    }\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>;\n    }\n\n    return todos.map((todo, index) => (\n    <div                                                       \n        className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n        key={index}\n    >\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n            {todo.text}\n        </div>\n        <div className=\"icons\">\n            <RiCloseCircleLine\n                onClick={() => removeTodo(todo.id)}\n                className=\"delete-icon\"\n            />\n            <TiEdit\n                onClick={() => setEdit({id: todo.id, value:todo.text})}\n                className=\"edit-icon\"\n            />\n        </div>\n    </div>\n    ));\n}\n\nexport default Todo;","import React, {useState} from 'react';\nimport TodoForm from \"./TodoForm\";\nimport Todo from \"./Todo\"\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    const addTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\n            return\n        }\n\n        const newTodos = [todo, ...todos]\n\n        setTodos(newTodos)\n        console.log(...todos);\n    }\n\n    const updateTodo = (todoId, newValue) => {\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\n        );\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos);\n    }\n    return (\n        <div>\n            <h1>Exciting things to do today!</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}\n            updateTodo={updateTodo}\n            />\n        </div>\n    );\n}\n\nexport default TodoList;","import React from \"react\";\nimport './App.css';\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n        <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}